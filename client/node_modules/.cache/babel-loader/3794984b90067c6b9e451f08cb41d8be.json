{"ast":null,"code":"var _jsxFileName = \"/Users/devrajsen/Downloads/react-first-project/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport './Expenses.css';\nimport Card from '../UI/Card';\nimport ExpensesFilter from '../ExpenseFilter/ExpensesFilter';\nimport ExpensesList from '../ExpensesList/ExpensesList';\nimport { useState } from 'react';\nimport Chart from '../Charts/Chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst years = ['All Expenses', '2019', '2020', '2021', '2022'];\nconst chartData = [{\n  label: 'Jan',\n  count: 0\n}, {\n  label: 'Feb',\n  count: 0\n}, {\n  label: 'Mar',\n  count: 0\n}, {\n  label: 'Apr',\n  count: 0\n}, {\n  label: 'May',\n  count: 0\n}, {\n  label: 'Jun',\n  count: 0\n}, {\n  label: 'Jul',\n  count: 0\n}, {\n  label: 'Aug',\n  count: 0\n}, {\n  label: 'Sep',\n  count: 0\n}, {\n  label: 'Oct',\n  count: 0\n}, {\n  label: 'Nov',\n  count: 0\n}, {\n  label: 'Dec',\n  count: 0\n}];\n\nfunction Expenses(props) {\n  _s();\n\n  const [year, setYear] = useState('All Expenses');\n\n  function filterExpensesBasisYear(year) {\n    setYear(year);\n  }\n\n  const monthYearMap = {};\n\n  for (let expenses in props.expenses) {\n    let expensesObj = props.expenses[expenses];\n    let date = new Date(expensesObj.date);\n    let month = date.toLocaleString('en-US', {\n      month: 'short'\n    });\n    let year = date.toLocaleString('en-US', {\n      year: 'numeric'\n    });\n    let monthYearString = year + '-' + month;\n\n    if (!monthYearMap[monthYearString]) {\n      monthYearMap[monthYearString] = 1;\n    } else {\n      monthYearMap[monthYearString]++;\n    }\n  }\n\n  console.log('monthYearMap:', monthYearMap);\n  chartData.map(result => {\n    if (monthYearMap[result.label]) {\n      result.count = monthYearMap[result.label];\n    }\n\n    return true;\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      years: years,\n      dropdownYear: year,\n      onFilteringYear: filterExpensesBasisYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      chartData: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpensesList, {\n      expenses: props.expenses,\n      year: year\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expenses, \"N1L7/CbQ3aa2tTO+kiFM6bm3gJI=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/devrajsen/Downloads/react-first-project/src/components/Expenses/Expenses.js"],"names":["Card","ExpensesFilter","ExpensesList","useState","Chart","years","chartData","label","count","Expenses","props","year","setYear","filterExpensesBasisYear","monthYearMap","expenses","expensesObj","date","Date","month","toLocaleString","monthYearString","console","log","map","result"],"mappings":"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","sourcesContent":["import './Expenses.css';\nimport Card from '../UI/Card';\nimport ExpensesFilter from '../ExpenseFilter/ExpensesFilter';\nimport ExpensesList from '../ExpensesList/ExpensesList';\nimport { useState } from 'react';\nimport Chart from '../Charts/Chart';\nconst years = [\n  'All Expenses',\n  '2019',\n  '2020',\n  '2021',\n  '2022'\n];\nconst chartData = [\n  {\n    label: 'Jan',\n    count: 0\n  },\n  {\n    label: 'Feb',\n    count: 0\n  },\n  {\n    label: 'Mar',\n    count: 0\n  },\n  {\n    label: 'Apr',\n    count: 0\n  },\n  {\n    label: 'May',\n    count: 0\n  },\n  {\n    label: 'Jun',\n    count: 0\n  },\n  {\n    label: 'Jul',\n    count: 0\n  },\n  {\n    label: 'Aug',\n    count: 0\n  },\n  {\n    label: 'Sep',\n    count: 0\n  },\n  {\n    label: 'Oct',\n    count: 0\n  },\n  {\n    label: 'Nov',\n    count: 0\n  },\n  {\n    label: 'Dec',\n    count: 0\n  }\n];\nfunction Expenses(props) {\n  const [year, setYear] = useState('All Expenses');\n  function filterExpensesBasisYear(year) {\n    setYear(year);\n  }\n  const monthYearMap = {};\n  for (let expenses in props.expenses) {\n    let expensesObj = props.expenses[expenses];\n    let date = new Date(expensesObj.date);\n    let month = date.toLocaleString('en-US', { month: 'short' });\n    let year = date.toLocaleString('en-US', { year: 'numeric' });\n    let monthYearString = year + '-' + month;\n    if (!monthYearMap[monthYearString]) {\n      monthYearMap[monthYearString] = 1;\n    } else {\n      monthYearMap[monthYearString]++;\n    }\n  }\n  console.log('monthYearMap:', monthYearMap);\n  chartData.map(result => {\n    if (monthYearMap[result.label]) {\n      result.count = monthYearMap[result.label];\n    }\n    return true;\n  });\n  return (\n    <Card className='expenses'>\n      <ExpensesFilter years={years} dropdownYear={year} onFilteringYear={filterExpensesBasisYear} />\n      <Chart chartData={chartData} />\n      <ExpensesList expenses={props.expenses} year={year} />\n    </Card>\n  )\n}\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}