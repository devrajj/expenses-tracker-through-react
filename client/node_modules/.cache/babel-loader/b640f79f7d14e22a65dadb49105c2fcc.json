{"ast":null,"code":"var _jsxFileName = \"/Users/devrajsen/Downloads/react-first-project/src/components/Expenses/Expenses.js\";\nimport './Expenses.css';\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport ExpensesFilter from '../ExpenseFilter/ExpensesFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst years = ['All Expenses', 2020, 2021, 2022];\n\nfunction Expenses(props) {\n  let items = [];\n  let expensesArray = props.expenses;\n\n  function filterExpensesBasisYear(year) {\n    if (year) {\n      expensesArray = expensesArray.filter(result => result.date = year);\n\n      for (let i = 0; i < expensesArray.length; i++) {\n        items.push( /*#__PURE__*/_jsxDEV(ExpenseItem, {\n          date: expensesArray[i].date,\n          name: expensesArray[i].name,\n          price: expensesArray[i].price\n        }, expensesArray[i].name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 20\n        }, this));\n      }\n    } else {\n      for (let i = 0; i < expensesArray.length; i++) {\n        items.push( /*#__PURE__*/_jsxDEV(ExpenseItem, {\n          date: expensesArray[i].date,\n          name: expensesArray[i].name,\n          price: expensesArray[i].price\n        }, expensesArray[i].name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 20\n        }, this));\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      years: years,\n      onFilteringYear: filterExpensesBasisYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), items]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/devrajsen/Downloads/react-first-project/src/components/Expenses/Expenses.js"],"names":["ExpenseItem","Card","ExpensesFilter","years","Expenses","props","items","expensesArray","expenses","filterExpensesBasisYear","year","filter","result","date","i","length","push","name","price"],"mappings":";AAAA,OAAO,gBAAP;AACA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AACA,MAAMC,KAAK,GAAG,CACZ,cADY,EAEZ,IAFY,EAGZ,IAHY,EAIZ,IAJY,CAAd;;AAMA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,aAAa,GAAGF,KAAK,CAACG,QAA1B;;AACA,WAASC,uBAAT,CAAiCC,IAAjC,EAAuC;AACrC,QAAIA,IAAJ,EAAU;AACRH,MAAAA,aAAa,GAAGA,aAAa,CAACI,MAAd,CAAqBC,MAAM,IAAIA,MAAM,CAACC,IAAP,GAAcH,IAA7C,CAAhB;;AACA,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,aAAa,CAACQ,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7CR,QAAAA,KAAK,CAACU,IAAN,eAAW,QAAC,WAAD;AAAa,UAAA,IAAI,EAAET,aAAa,CAACO,CAAD,CAAb,CAAiBD,IAApC;AAA0C,UAAA,IAAI,EAAEN,aAAa,CAACO,CAAD,CAAb,CAAiBG,IAAjE;AAAuE,UAAA,KAAK,EAAEV,aAAa,CAACO,CAAD,CAAb,CAAiBI;AAA/F,WAA2GX,aAAa,CAACO,CAAD,CAAb,CAAiBG,IAA5H;AAAA;AAAA;AAAA;AAAA,gBAAX;AACD;AACF,KALD,MAKO;AACL,WAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,aAAa,CAACQ,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7CR,QAAAA,KAAK,CAACU,IAAN,eAAW,QAAC,WAAD;AAAa,UAAA,IAAI,EAAET,aAAa,CAACO,CAAD,CAAb,CAAiBD,IAApC;AAA0C,UAAA,IAAI,EAAEN,aAAa,CAACO,CAAD,CAAb,CAAiBG,IAAjE;AAAuE,UAAA,KAAK,EAAEV,aAAa,CAACO,CAAD,CAAb,CAAiBI;AAA/F,WAA2GX,aAAa,CAACO,CAAD,CAAb,CAAiBG,IAA5H;AAAA;AAAA;AAAA;AAAA,gBAAX;AACD;AACF;AACF;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAEd,KAAvB;AAA8B,MAAA,eAAe,EAAEM;AAA/C;AAAA;AAAA;AAAA;AAAA,YADF,EAEGH,KAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;KAtBQF,Q;AAuBT,eAAeA,QAAf","sourcesContent":["import './Expenses.css';\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport ExpensesFilter from '../ExpenseFilter/ExpensesFilter';\nconst years = [\n  'All Expenses',\n  2020,\n  2021,\n  2022\n];\nfunction Expenses(props) {\n  let items = [];\n  let expensesArray = props.expenses;\n  function filterExpensesBasisYear(year) {\n    if (year) {\n      expensesArray = expensesArray.filter(result => result.date = year)\n      for (let i = 0; i < expensesArray.length; i++) {\n        items.push(<ExpenseItem date={expensesArray[i].date} name={expensesArray[i].name} price={expensesArray[i].price} key={expensesArray[i].name} />)\n      }\n    } else {\n      for (let i = 0; i < expensesArray.length; i++) {\n        items.push(<ExpenseItem date={expensesArray[i].date} name={expensesArray[i].name} price={expensesArray[i].price} key={expensesArray[i].name} />)\n      }\n    }\n  }\n\n  return (\n    <Card className='expenses'>\n      <ExpensesFilter years={years} onFilteringYear={filterExpensesBasisYear} />\n      {items}\n    </Card>\n  )\n}\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}