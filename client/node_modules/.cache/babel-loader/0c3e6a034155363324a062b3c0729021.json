{"ast":null,"code":"var _jsxFileName = \"/Users/devrajsen/Downloads/react-first-project/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport './Expenses.css';\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport ExpensesFilter from '../ExpenseFilter/ExpensesFilter';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst years = ['All Expenses', 2020, 2021, 2022];\n\nfunction Expenses(props) {\n  _s();\n\n  const [year, setYear] = useState('All Expenses');\n\n  function filterExpensesBasisYear(year) {\n    setYear(year);\n  }\n\n  console.log('props.expenses:', props.expenses);\n  console.log('year:', year);\n  const filteredExpenses = props.expenses.filter(result => {\n    if (year === 'All Expenses') {\n      return true;\n    } else if (new Date(result.date).toLocaleString('en-US', {\n      year: 'numeric'\n    }) === year) {\n      return true;\n    }\n\n    return false;\n  });\n  console.log('filteredExpenses:', filteredExpenses);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      years: years,\n      dropdownYear: year,\n      onFilteringYear: filterExpensesBasisYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), filteredExpenses.map(result => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      date: result.date,\n      name: result.name,\n      amount: result.amount\n    }, result.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 41\n    }, this)), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expenses, \"N1L7/CbQ3aa2tTO+kiFM6bm3gJI=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/devrajsen/Downloads/react-first-project/src/components/Expenses/Expenses.js"],"names":["ExpenseItem","Card","ExpensesFilter","useState","years","Expenses","props","year","setYear","filterExpensesBasisYear","console","log","expenses","filteredExpenses","filter","result","Date","date","toLocaleString","map","name","amount"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AACA,MAAMC,KAAK,GAAG,CACZ,cADY,EAEZ,IAFY,EAGZ,IAHY,EAIZ,IAJY,CAAd;;AAMA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,cAAD,CAAhC;;AACA,WAASM,uBAAT,CAAiCF,IAAjC,EAAuC;AACrCC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD;;AACDG,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,KAAK,CAACM,QAArC;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,IAArB;AACA,QAAMM,gBAAgB,GAAGP,KAAK,CAACM,QAAN,CAAeE,MAAf,CAAsBC,MAAM,IAAI;AACvD,QAAIR,IAAI,KAAK,cAAb,EAA6B;AAC3B,aAAO,IAAP;AACD,KAFD,MAEO,IAAI,IAAIS,IAAJ,CAASD,MAAM,CAACE,IAAhB,EAAsBC,cAAtB,CAAqC,OAArC,EAA8C;AAAEX,MAAAA,IAAI,EAAE;AAAR,KAA9C,MAAuEA,IAA3E,EAAiF;AACtF,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GAPwB,CAAzB;AAQAG,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCE,gBAAjC;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAET,KAAvB;AAA8B,MAAA,YAAY,EAAEG,IAA5C;AAAkD,MAAA,eAAe,EAAEE;AAAnE;AAAA;AAAA;AAAA;AAAA,YADF,EAEGI,gBAAgB,CAACM,GAAjB,CAAsBJ,MAAD,iBAAY,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEA,MAAM,CAACE,IAA1B;AAAgC,MAAA,IAAI,EAAEF,MAAM,CAACK,IAA7C;AAAmD,MAAA,MAAM,EAAEL,MAAM,CAACM;AAAlE,OAA+EN,MAAM,CAACK,IAAtF;AAAA;AAAA;AAAA;AAAA,YAAjC,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAvBQf,Q;;KAAAA,Q;AAwBT,eAAeA,QAAf","sourcesContent":["import './Expenses.css';\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport ExpensesFilter from '../ExpenseFilter/ExpensesFilter';\nimport { useState } from 'react';\nconst years = [\n  'All Expenses',\n  2020,\n  2021,\n  2022\n];\nfunction Expenses(props) {\n  const [year, setYear] = useState('All Expenses');\n  function filterExpensesBasisYear(year) {\n    setYear(year);\n  }\n  console.log('props.expenses:', props.expenses);\n  console.log('year:', year);\n  const filteredExpenses = props.expenses.filter(result => {\n    if (year === 'All Expenses') {\n      return true;\n    } else if (new Date(result.date).toLocaleString('en-US', { year: 'numeric' }) === year) {\n      return true;\n    }\n    return false;\n  });\n  console.log('filteredExpenses:', filteredExpenses);\n\n  return (\n    <Card className='expenses'>\n      <ExpensesFilter years={years} dropdownYear={year} onFilteringYear={filterExpensesBasisYear} />\n      {filteredExpenses.map((result) => <ExpenseItem date={result.date} name={result.name} amount={result.amount} key={result.name} />)};\n    </Card>\n  )\n}\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}