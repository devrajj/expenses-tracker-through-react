{"ast":null,"code":"var _jsxFileName = \"/Users/devrajsen/Downloads/react-first-project/src/components/NewExpense/ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseForm(props) {\n  _s();\n\n  const [enteredData, setEnteredData] = useState({\n    name: '',\n    amount: '',\n    date: ''\n  });\n  const [isCancelled, checkIfCancelled] = useState(false);\n\n  function nameChangedHandler(event) {\n    setEnteredData(prevState => {\n      return { ...prevState,\n        name: event.target.value\n      };\n    });\n  }\n\n  function amountChangedHandler(event) {\n    setEnteredData(prevState => {\n      return { ...prevState,\n        amount: event.target.value\n      };\n    });\n  }\n\n  function dateChangedHandler(event) {\n    setEnteredData(prevState => {\n      return { ...prevState,\n        date: event.target.value\n      };\n    });\n  }\n\n  function submitHandler(event) {\n    event.preventDefault();\n    props.onSaveExpense(enteredData);\n    setEnteredData({\n      name: '',\n      amount: '',\n      date: ''\n    });\n  }\n\n  function setCancelledForm() {\n    checkIfCancelled(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: isCancelled ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"new-expense__control label\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"new-expense__control input\",\n            value: enteredData.name,\n            type: \"text\",\n            onChange: nameChangedHandler,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"new-expense__control label\",\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"new-expense__control input\",\n            value: enteredData.amount,\n            type: \"number\",\n            min: \"0.01\",\n            step: \"0.01\",\n            onChange: amountChangedHandler,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"new-expense__control label\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"new-expense__control input\",\n            value: enteredData.date,\n            type: \"date\",\n            min: \"2019-01-01\",\n            max: \"2022-12-31\",\n            onChange: dateChangedHandler,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: setCancelledForm,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add New Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpenseForm, \"MtA7+9giThClTf8fPkbBOemg17w=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["/Users/devrajsen/Downloads/react-first-project/src/components/NewExpense/ExpenseForm.js"],"names":["useState","ExpenseForm","props","enteredData","setEnteredData","name","amount","date","isCancelled","checkIfCancelled","nameChangedHandler","event","prevState","target","value","amountChangedHandler","dateChangedHandler","submitHandler","preventDefault","onSaveExpense","setCancelledForm"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport './ExpenseForm.css';\nfunction ExpenseForm(props) {\n  const [enteredData, setEnteredData] = useState({\n    name: '',\n    amount: '',\n    date: ''\n  })\n  const [isCancelled, checkIfCancelled] = useState(false);\n  function nameChangedHandler(event) {\n    setEnteredData((prevState) => {\n      return { ...prevState, name: event.target.value }\n    })\n  }\n  function amountChangedHandler(event) {\n    setEnteredData((prevState) => {\n      return { ...prevState, amount: event.target.value }\n    })\n  }\n  function dateChangedHandler(event) {\n    setEnteredData((prevState) => {\n      return { ...prevState, date: event.target.value }\n    })\n  }\n  function submitHandler(event) {\n    event.preventDefault();\n    props.onSaveExpense(enteredData);\n    setEnteredData({\n      name: '',\n      amount: '',\n      date: ''\n    })\n  }\n  function setCancelledForm() {\n    checkIfCancelled(true);\n  }\n  return (\n    <form onSubmit={submitHandler}>\n      {\n        isCancelled ? <button type=\"submit\">Add New Expense</button> : <>\n          <div className='new-expense__controls'>\n            <div className='new-expense__controls'>\n              <label className='new-expense__control label'>Name</label>\n              <input className='new-expense__control input' value={enteredData.name} type=\"text\" onChange={nameChangedHandler} required />\n            </div>\n            <div className='new-expense__controls'>\n              <label className='new-expense__control label'>Amount</label>\n              <input className='new-expense__control input' value={enteredData.amount} type=\"number\" min=\"0.01\" step=\"0.01\" onChange={amountChangedHandler} required />\n            </div>\n            <div className='new-expense__controls'>\n              <label className='new-expense__control label'>Date</label>\n              <input className='new-expense__control input' value={enteredData.date} type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangedHandler} required />\n            </div>\n          </div>\n          <div className='new-expense__actions'>\n            <button type=\"button\" onClick={setCancelledForm}>Cancel</button>\n            <button type=\"submit\">Add New Expense</button>\n          </div>\n        </>\n      }\n    </form >\n  )\n}\nexport default ExpenseForm;\n"]},"metadata":{},"sourceType":"module"}