{"ast":null,"code":"var _jsxFileName = \"/Users/devrajsen/Downloads/react-first-project/src/components/Charts/Chart.js\";\nimport './Chart.css';\nimport ChartBar from './ChartBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chart(props) {\n  console.log('props:', props.chartData);\n  let dataPoints = props.chartData.map(result => result.count);\n  let maximumValue = Math.max(...dataPoints);\n  console.log('maximumValue:', maximumValue);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: props.chartData.map(result => /*#__PURE__*/_jsxDEV(ChartBar, {\n      count: result.count,\n      label: result.label\n    }, result.label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 39\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/devrajsen/Downloads/react-first-project/src/components/Charts/Chart.js"],"names":["ChartBar","Chart","props","console","log","chartData","dataPoints","map","result","count","maximumValue","Math","max","label"],"mappings":";AAAA,OAAO,aAAP;AACA,OAAOA,QAAP,MAAqB,YAArB;;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,KAAK,CAACG,SAA5B;AACA,MAAIC,UAAU,GAAGJ,KAAK,CAACG,SAAN,CAAgBE,GAAhB,CAAoBC,MAAM,IAAIA,MAAM,CAACC,KAArC,CAAjB;AACA,MAAIC,YAAY,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGN,UAAZ,CAAnB;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BM,YAA7B;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cAEIR,KAAK,CAACG,SAAN,CAAgBE,GAAhB,CAAoBC,MAAM,iBAAI,QAAC,QAAD;AAA6B,MAAA,KAAK,EAAEA,MAAM,CAACC,KAA3C;AAAkD,MAAA,KAAK,EAAED,MAAM,CAACK;AAAhE,OAAeL,MAAM,CAACK,KAAtB;AAAA;AAAA;AAAA;AAAA,YAA9B;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;KAZQZ,K;AAaT,eAAeA,KAAf","sourcesContent":["import './Chart.css';\nimport ChartBar from './ChartBar';\nfunction Chart(props) {\n  console.log('props:', props.chartData);\n  let dataPoints = props.chartData.map(result => result.count);\n  let maximumValue = Math.max(...dataPoints);\n  console.log('maximumValue:', maximumValue);\n  return (\n    <div className='chart'>\n      {\n        props.chartData.map(result => <ChartBar key={result.label} count={result.count} label={result.label} />)\n      }\n    </div>\n  )\n}\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}