{"ast":null,"code":"var _jsxFileName = \"/Users/devrajsen/Downloads/react-first-project/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport './Expenses.css';\nimport Card from '../UI/Card';\nimport ExpensesFilter from '../ExpenseFilter/ExpensesFilter';\nimport ExpensesList from '../ExpensesList/ExpensesList';\nimport { useState } from 'react';\nimport Chart from '../Charts/Chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst months = ['All Expenses', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nconst chartData = [{\n  label: 'Jan',\n  count: 0\n}, {\n  label: 'Feb',\n  count: 0\n}, {\n  label: 'Mar',\n  count: 0\n}, {\n  label: 'Apr',\n  count: 0\n}, {\n  label: 'May',\n  count: 0\n}, {\n  label: 'Jun',\n  count: 0\n}, {\n  label: 'Jul',\n  count: 0\n}, {\n  label: 'Aug',\n  count: 0\n}, {\n  label: 'Sep',\n  count: 0\n}, {\n  label: 'Oct',\n  count: 0\n}, {\n  label: 'Nov',\n  count: 0\n}, {\n  label: 'Dec',\n  count: 0\n}];\n\nfunction Expenses(props) {\n  _s();\n\n  const [month, setMonth] = useState('All Expenses');\n\n  function filterExpensesBasisMonth(month) {\n    setMonth(month);\n  }\n\n  const monthMap = {};\n\n  for (let expenses in props.expenses) {\n    let expensesObj = props.expenses[expenses];\n    let date = new Date(expensesObj.date);\n    let month = date.toLocaleString('en-US', {\n      month: 'short'\n    });\n\n    if (!monthMap[month]) {\n      monthMap[month] = 1;\n    } else {\n      monthMap[month]++;\n    }\n  }\n\n  chartData.map(result => {\n    if (monthMap[result.label]) {\n      result.count = monthMap[result.label];\n    }\n\n    return true;\n  });\n  console.log('chartData:', chartData);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      months: months,\n      dropdownMonths: month,\n      onFilteringMonth: filterExpensesBasisMonth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      chartData: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpensesList, {\n      expenses: props.expenses,\n      month: month\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expenses, \"e+kBpQeJttoAdmtpoX68GSL8ToM=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/devrajsen/Downloads/react-first-project/src/components/Expenses/Expenses.js"],"names":["Card","ExpensesFilter","ExpensesList","useState","Chart","months","chartData","label","count","Expenses","props","month","setMonth","filterExpensesBasisMonth","monthMap","expenses","expensesObj","date","Date","toLocaleString","map","result","console","log"],"mappings":"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","sourcesContent":["import './Expenses.css';\nimport Card from '../UI/Card';\nimport ExpensesFilter from '../ExpenseFilter/ExpensesFilter';\nimport ExpensesList from '../ExpensesList/ExpensesList';\nimport { useState } from 'react';\nimport Chart from '../Charts/Chart';\nconst months = [\n  'All Expenses',\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n];\nconst chartData = [\n  {\n    label: 'Jan',\n    count: 0\n  },\n  {\n    label: 'Feb',\n    count: 0\n  },\n  {\n    label: 'Mar',\n    count: 0\n  },\n  {\n    label: 'Apr',\n    count: 0\n  },\n  {\n    label: 'May',\n    count: 0\n  },\n  {\n    label: 'Jun',\n    count: 0\n  },\n  {\n    label: 'Jul',\n    count: 0\n  },\n  {\n    label: 'Aug',\n    count: 0\n  },\n  {\n    label: 'Sep',\n    count: 0\n  },\n  {\n    label: 'Oct',\n    count: 0\n  },\n  {\n    label: 'Nov',\n    count: 0\n  },\n  {\n    label: 'Dec',\n    count: 0\n  }\n];\nfunction Expenses(props) {\n  const [month, setMonth] = useState('All Expenses');\n  function filterExpensesBasisMonth(month) {\n    setMonth(month);\n  }\n  const monthMap = {};\n  for (let expenses in props.expenses) {\n    let expensesObj = props.expenses[expenses];\n    let date = new Date(expensesObj.date);\n    let month = date.toLocaleString('en-US', { month: 'short' });\n    if (!monthMap[month]) {\n      monthMap[month] = 1;\n    } else {\n      monthMap[month]++;\n    }\n  }\n  chartData.map(result => {\n    if (monthMap[result.label]) {\n      result.count = monthMap[result.label];\n    }\n    return true;\n  });\n  console.log('chartData:', chartData);\n  return (\n    <Card className='expenses'>\n      <ExpensesFilter months={months} dropdownMonths={month} onFilteringMonth={filterExpensesBasisMonth} />\n      <Chart chartData={chartData} />\n      <ExpensesList expenses={props.expenses} month={month} />\n    </Card>\n  )\n}\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}