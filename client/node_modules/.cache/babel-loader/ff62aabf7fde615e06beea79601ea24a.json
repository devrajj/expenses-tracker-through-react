{"ast":null,"code":"var _jsxFileName = \"/Users/devrajsen/Downloads/react-first-project/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport './Expenses.css';\nimport Card from '../UI/Card';\nimport ExpensesFilter from '../ExpenseFilter/ExpensesFilter';\nimport ExpensesList from '../ExpensesList/ExpensesList';\nimport { useState } from 'react';\nimport Chart from '../Charts/Chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst years = ['All Expenses', '2019', '2020', '2021', '2022'];\n\nfunction Expenses(props) {\n  _s();\n\n  const [year, setYear] = useState('All Expenses');\n\n  function filterExpensesBasisYear(year) {\n    setYear(year);\n  }\n\n  console.log('props.expenses:', props.expenses);\n  console.log('chartDataBefore:', chartData);\n\n  for (const expenses of props.expenses) {\n    const month = new Date(expenses.date).getMonth();\n    const expenseYear = new Date(expenses.date).getFullYear();\n\n    if (year === 'All Expenses') {\n      chartData[month].count += expenses.amount;\n    } else {\n      if (expenseYear.toString() === year) {\n        chartData[month].count += expenses.amount;\n      }\n    }\n  }\n\n  console.log('chartDataAfter:', chartData);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      years: years,\n      dropdownYear: year,\n      onFilteringYear: filterExpensesBasisYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      chartData: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpensesList, {\n      expenses: props.expenses,\n      year: year\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expenses, \"N1L7/CbQ3aa2tTO+kiFM6bm3gJI=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/devrajsen/Downloads/react-first-project/src/components/Expenses/Expenses.js"],"names":["Card","ExpensesFilter","ExpensesList","useState","Chart","years","Expenses","props","year","setYear","filterExpensesBasisYear","console","log","expenses","chartData","month","Date","date","getMonth","expenseYear","getFullYear","count","amount","toString"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;AACA,MAAMC,KAAK,GAAG,CACZ,cADY,EAEZ,MAFY,EAGZ,MAHY,EAIZ,MAJY,EAKZ,MALY,CAAd;;AAOA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,cAAD,CAAhC;;AACA,WAASO,uBAAT,CAAiCF,IAAjC,EAAuC;AACrCC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD;;AACDG,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,KAAK,CAACM,QAArC;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCE,SAAhC;;AACA,OAAK,MAAMD,QAAX,IAAuBN,KAAK,CAACM,QAA7B,EAAuC;AACrC,UAAME,KAAK,GAAG,IAAIC,IAAJ,CAASH,QAAQ,CAACI,IAAlB,EAAwBC,QAAxB,EAAd;AACA,UAAMC,WAAW,GAAG,IAAIH,IAAJ,CAASH,QAAQ,CAACI,IAAlB,EAAwBG,WAAxB,EAApB;;AACA,QAAIZ,IAAI,KAAK,cAAb,EAA6B;AAC3BM,MAAAA,SAAS,CAACC,KAAD,CAAT,CAAiBM,KAAjB,IAA0BR,QAAQ,CAACS,MAAnC;AACD,KAFD,MAEO;AACL,UAAIH,WAAW,CAACI,QAAZ,OAA2Bf,IAA/B,EAAqC;AACnCM,QAAAA,SAAS,CAACC,KAAD,CAAT,CAAiBM,KAAjB,IAA0BR,QAAQ,CAACS,MAAnC;AACD;AACF;AACF;;AACDX,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BE,SAA/B;AACA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAET,KAAvB;AAA8B,MAAA,YAAY,EAAEG,IAA5C;AAAkD,MAAA,eAAe,EAAEE;AAAnE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEI;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEP,KAAK,CAACM,QAA9B;AAAwC,MAAA,IAAI,EAAEL;AAA9C;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA1BQF,Q;;KAAAA,Q;AA2BT,eAAeA,QAAf","sourcesContent":["import './Expenses.css';\nimport Card from '../UI/Card';\nimport ExpensesFilter from '../ExpenseFilter/ExpensesFilter';\nimport ExpensesList from '../ExpensesList/ExpensesList';\nimport { useState } from 'react';\nimport Chart from '../Charts/Chart';\nconst years = [\n  'All Expenses',\n  '2019',\n  '2020',\n  '2021',\n  '2022'\n];\nfunction Expenses(props) {\n  const [year, setYear] = useState('All Expenses');\n  function filterExpensesBasisYear(year) {\n    setYear(year);\n  }\n  console.log('props.expenses:', props.expenses);\n  console.log('chartDataBefore:', chartData);\n  for (const expenses of props.expenses) {\n    const month = new Date(expenses.date).getMonth();\n    const expenseYear = new Date(expenses.date).getFullYear();\n    if (year === 'All Expenses') {\n      chartData[month].count += expenses.amount;\n    } else {\n      if (expenseYear.toString() === year) {\n        chartData[month].count += expenses.amount;\n      }\n    }\n  }\n  console.log('chartDataAfter:', chartData);\n  return (\n    <Card className='expenses'>\n      <ExpensesFilter years={years} dropdownYear={year} onFilteringYear={filterExpensesBasisYear} />\n      <Chart chartData={chartData} />\n      <ExpensesList expenses={props.expenses} year={year} />\n    </Card>\n  )\n}\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}